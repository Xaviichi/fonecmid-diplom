// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВидДоговора") <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Выбран некорректный вид договора");
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_ДатаНачалаДействия") > Дата 
		ИЛИ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_ДатаОкончанияДействия") < Дата Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Дата документа не попадает в период действия договора");
	КонецЕсли;

	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Для Каждого ТекСтрокаВыполненныеРаботы из ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ТекСтрокаВыполненныеРаботы.ЧасовКОплатеКлиенту;
		Движение.СуммаКОплате = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СтоимостьЧасаРаботыСпециалиста")
			*ТекСтрокаВыполненныеРаботы.ЧасовКОплатеКлиенту;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовыйОбъект", ЭтоНовый());
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	//@skip-check property-return-type
	Если ДополнительныеСвойства.ЭтоНовыйОбъект Тогда
		СформироватьУведомление();
	КонецЕсли;
	
	ПроверитьСовпадениеРеквизитов(Дата); 
	ПроверитьСовпадениеРеквизитов(ВремяНачалаРабот);
	ПроверитьСовпадениеРеквизитов(ВремяОкончанияРабот);
	ПроверитьСовпадениеРеквизитов(Специалист);	

КонецПроцедуры

	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//@skip-check method-param-value-type
Процедура ПроверитьСовпадениеРеквизитов(ПроверяемыйРеквизит)
	
	//@skip-check invocation-parameter-type-intersect
	СтарыйРеквизит = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПроверяемыйРеквизит, Строка(ПроверяемыйРеквизит));
	Если ПроверяемыйРеквизит <> СтарыйРеквизит Тогда
		СформироватьУведомление(ПроверяемыйРеквизит); 
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьУведомление(ПроверяемыйРеквизит = Неопределено)

	НовоеУведомление = Справочники.ВКМ_УведомленияДляТелеграма.СоздатьЭлемент();
	Если ПроверяемыйРеквизит <> Неопределено Тогда
		НовоеУведомление.ТекстСообщения = СтрШаблон("Изменен реквизит %1 в документе №%2 от %3. Новое значение: %4",
			Строка(ПроверяемыйРеквизит), Номер, Дата, ПроверяемыйРеквизит);
	Иначе
		НовоеУведомление.ТекстСообщения = СтрШаблон("Создан новый документ №%1 от %2.",
			Номер, Дата);
	КонецЕсли;
	НовоеУведомление.Записать();

КонецПроцедуры

#КонецОбласти

#КонецЕсли
	